apiVersion: apps/v1
kind: Deployment
metadata:
  name: openshift-crypto
  labels:
    app: openshift-crypto
spec:
  replicas: 2
  selector:
    matchLabels:
      app: openshift-crypto
  template:
    metadata:
      labels:
        app: openshift-crypto
    spec:
      volumes:
        — configMap:
            defaultMode: 420
            name: crypto-configmap
            optional: true
          name: config-files
      containers:
      - name: openshift-crypto
        image: 'image-registry.openshift-image-registry.svc:5000/omarajraoui5-dev/openshift-crypto:latest'
        ports:
            - containerPort: 8080
              protocol: TCP    
        volumeMounts:    
            - name: config-files
              mountPath: /usr/local/openresty/nginx/html/       
---
kind: Service
apiVersion: v1
metadata:
  name: openshift-crypto
  namespace: omarajraoui5-dev
  uid: 48f87c0e-e76e-4675-be66-52faa5ce6230
  resourceVersion: '1955546345'
  creationTimestamp: '2024-06-10T11:52:47Z'
  labels:
    app: openshift-crypto
    app.kubernetes.io/component: openshift-crypto
    app.kubernetes.io/instance: openshift-crypto
    app.kubernetes.io/name: openshift-crypto
    app.kubernetes.io/part-of: openshift-crypto-app
    app.openshift.io/runtime: nodejs
    app.openshift.io/runtime-version: 18-ubi8
  annotations:
    app.openshift.io/vcs-ref: ''
    app.openshift.io/vcs-uri: 'https://github.com/omarajraoui/openshift-crypto'
    openshift.io/generated-by: OpenShiftWebConsole
  managedFields:
    - manager: Mozilla
      operation: Update
      apiVersion: v1
      time: '2024-06-10T14:47:46Z'
      fieldsType: FieldsV1
      fieldsV1:
        'f:metadata':
          'f:annotations':
            .: {}
            'f:app.openshift.io/vcs-ref': {}
            'f:app.openshift.io/vcs-uri': {}
            'f:openshift.io/generated-by': {}
          'f:labels':
            .: {}
            'f:app': {}
            'f:app.kubernetes.io/component': {}
            'f:app.kubernetes.io/instance': {}
            'f:app.kubernetes.io/name': {}
            'f:app.kubernetes.io/part-of': {}
            'f:app.openshift.io/runtime': {}
            'f:app.openshift.io/runtime-version': {}
        'f:spec':
          'f:internalTrafficPolicy': {}
          'f:ports':
            .: {}
            'k:{"port":3000,"protocol":"TCP"}':
              .: {}
              'f:name': {}
              'f:port': {}
              'f:protocol': {}
              'f:targetPort': {}
          'f:selector': {}
          'f:sessionAffinity': {}
          'f:type': {}
spec:
  clusterIP: 172.30.8.140
  ipFamilies:
    - IPv4
  ports:
    - name: 8080-tcp
      protocol: TCP
      port: 3000
      targetPort: 3000
  internalTrafficPolicy: Cluster
  clusterIPs:
    - 172.30.8.140
  type: ClusterIP
  ipFamilyPolicy: SingleStack
  sessionAffinity: None
  selector:
    app: openshift-crypto
    deployment: openshift-crypto
status:
  loadBalancer: {}

-----
configmap "crypto-configmap" created
kind: ConfigMap
apiVersion: v1
metadata:
  name: crypto-configmap
  namespace: omarajraoui5-dev
  uid: 2fccc50b-7822-4d15-8e35-6f7219c0d20e
  resourceVersion: '1967133257'
  creationTimestamp: '2024-06-10T12:16:25Z'
  managedFields:
    - manager: Mozilla
      operation: Update
      apiVersion: v1
      time: '2024-06-10T14:48:57Z'
      fieldsType: FieldsV1
      fieldsV1:
        'f:immutable': {}
immutable: false
data:
 appConfig.js: |
 var appConfig = {
 REACT_APP_OAUTH_CLIENT_ID: ‘mySTAGINGappoauthclientid’,
 REACT_APP_OAUTH_REDIRECT_URI: ‘https://staging.myapp.com/‘,
 REACT_APP_ANALYTICS_URL: ‘https://staging.analytics.com’
 };
 